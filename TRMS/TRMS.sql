--EMPLOYEES TABLE
CREATE TABLE EMPLOYEES(
EMPLOYEE_ID NUMBER(10) NOT NULL PRIMARY KEY,
FNAME VARCHAR(30) NOT NULL,
LNAME VARCHAR(30) NOT NULL,
USERNAME VARCHAR(30) UNIQUE NOT NULL,
"PASSWORD" VARCHAR(30) NOT NULL,
DEPARTMENT_NAME VARCHAR(30),
SUPERVISOR_ID NUMBER (10),
ADDRESS VARCHAR(30) NOT NULL,
CITY varchar(30) not null,
STATE VARCHAR(30) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL,
PHONENUMBER VARCHAR(10) NOT NULL,
EMAIL VARCHAR(100) NOT NULL,
CONSTRAINT FK_DEPARTMENT FOREIGN KEY (DEPARTMENT_NAME) REFERENCES DEPARTMENT(DEPARTMENT_NAME));



--REIMBURSMENTS TABLER
create table REIMBURSMENT(
REIMBURSMENT_ID NUMBER(10) NOT NULL PRIMARY KEY,
EMPLOYEE_ID NUMBER(10) NOT NULL ,
REIMBURSMENT_TYPE_NAME VARCHAR(30) NOT NULL,
REIMBURSMENT_AMOUNT DECIMAL(6,2) NOT NULL,
APPROVAL_STEP NUMBER(1) NOT NULL,
STATUS VARCHAR(20) NOT NULL,
SUBMITTED VARCHAR(3) NOT NULL,
PREAPPROVED VARCHAR(3) NOT NULL,
EVENT_START_DATE DATE NOT NULL,
EVENT_END_DATE DATE NOT NULL,
"LOCATION" VARCHAR(30) NOT NULL,
JUSTIFICATION VARCHAR(100) NOT NULL,
MISSED_WORK NUMBER(2) NOT NULL,
FILE_ID NUMBER(2) NOT NULL,
CONSTRAINT FK_FILE FOREIGN KEY(FILE_ID) REFERENCES FILE_ATTACHMENTS(FILE_ID),
CONSTRAINT MISSED_WORK_CHECK CHECK (MISSED_WORK > 0),
CONSTRAINT FK_REIMBURSMENT_TYPE FOREIGN KEY(REIMBURSMENT_TYPE_NAME) REFERENCES REIMBURSMENT_TYPE(REIMBURSMENT_TYPE_NAME),
CONSTRAINT FK_EMPLOYEES FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID) ON DELETE CASCADE;



--DEPARTMENT TABLE
CREATE TABLE DEPARTMENT(
DEPARTMENT_NAME VARCHAR(30) NOT NULL PRIMARY KEY,
DEPARTMENT_HEAD_ID NUMBER(10) NOT NULL,
BENCO_ID NUMBER(10) NOT NULL);



--REIMBURSEMENT TYPE TABLE 
CREATE TABLE REIMBURSMENT_TYPE(
REIMBURSMENT_TYPE_NAME VARCHAR(30) NOT NULL PRIMARY KEY,
TYPE_PERCENTAGE DECIMAL(2,2) NOT NULL,
GRADING_FORMAT NUMBER(1) NOT NULL,
CONSTRAINT FK_REIMBURSMENT_ID FOREIGN KEY(REIMBURSMENT_ID) 
REFERENCES REIMBURSMENT(REIMBURSMENT_ID));



--TABLE FOR FILE ATTACHMENTS
CREATE TABLE FILE_ATTACHMENTS(
FILE_ID NUMBER(2) NOT NULL PRIMARY KEY,
FILE_NAME BLOB NOT NULL,
REIMBURSMENT_ID NUMBER(10) NOT NULL,
CONSTRAINT FK_REIMBURSE_ID FOREIGN KEY(REIMBURSMENT_ID)
REFERENCES REIMBURSMENT(REIMBURSMENT_ID)
ON DELETE CASCADE);



--ADDITIONAL INFO TABLE
CREATE TABLE ADDITIONAL_INFO(
INFO VARCHAR(300) NOT NULL,
REIMBURSMENT_ID NUMBER(10) NOT NULL,
CONSTRAINT FK_INFO_REIMBURSMENT FOREIGN KEY(REIMBURSMENT_ID)
REFERENCES REIMBURSMENT(REIMBURSMENT_ID) ON DELETE CASCADE);




--procedure to get all from 
create or replace procedure INTO_REIMBURSMENT(
EMP_ID_IN IN NUMBER, REIMBURSMENT_TYPE_ID_IN IN NUMBER, 
REIMBURSMENT_AMOUNT_IN IN NUMBER,APPROVAL_STEP_IN IN NUMBER,
TYPE_ID_IN IN NUMBER)
as 
begin
    INSERT INTO REIMBURSMENT VALUES (REIMBURSMENT_ID_SEQ.NEXTVAL, EMP_ID_IN, REIMBURSMENT_TYPE_ID_IN,
    REIMBURSMENT_AMOUNT_IN, APPROVAL_STEP_IN, TYPE_ID_IN);
end;
/



--select * from 
--employee name, company email,approval step , department, reimbursment type, status., phone, address, employee city, state, zip, event date/time, location, description, justification, missed work, preapproved.
--WITH THE AMOUNT LEFT




--procedure to store all submitted fields. 

--procedure to get the total amount left from the reimbursment for the year.

--procedure for information request --info request add new column in reimbursement. 

--update the four columns that are editable. 

/*
PRE APPROVED
